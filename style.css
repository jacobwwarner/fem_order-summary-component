:root {
    --clr-neutral-100: hsl(0 0% 100%);
    --clr-neutral-200: hsl(225 100% 98%);
    --clr-neutral-400: hsla(223 23% 55% / 1);
    --clr-neutral-800: hsl(223 47% 23%);

    --clr-primary-200: hsl(225 100% 94%);
    --clr-primary-300: hsla(245 83% 68% / 1);
    --clr-primary-400: hsl(245 75% 52%);

    --fs-300: 0.875rem;
    --fs-400: 1rem;
    --fs-700: 1.75rem;

    --fw-400: 500;
    --fw-700: 700;
    --fw-900: 900;
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body, h1, h2, h3, h4, p,
figure, blockquote, dl, dd {
  margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1, h2, h3, h4,
button, input, label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1, h2,
h3, h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input, button,
textarea, select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/* Remove all animations, transitions and smoothing */
@media (prefers-reduced-motion: reduce) {
    html:focus-within {
        scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

body {
    font-family: "Red Hat", sans-serif;
    font-size: var(--fs-400);
    font-weight: var(--fw-400);
    line-height: 1.625;
    color: var(--clr-neutral-400);
    background: var(--clr-primary-200);
    /* for demo only */
    display: grid;
    place-items: center;
    min-height: 100vh;
}

h1, h2, h3 {
    line-height: 1.1;
}

h2 {
    font-size: var(--fs-700);
    font-weight: var(--fw-900);
    color: var(--clr-neutral-800);
}

/* Composition */

.flow > :where(:not(:last-child)) {
    /* More readable that `.flow > * + * {...}` syntax. */
    margin-top: var(--flow-spacer, 1em);
}

.grid-flow {
    display: grid;
    gap: var(--gap, 1rem);
}

.flex-row {
    display: flex;
    align-items: center;
    gap: var(--gap, 1rem);
}

/* Utility */

.padding-24 {
    padding: 1.5rem;
}

.padding-48 {
    padding: 3rem;
}

.text-neutral-400 {
    color: var(--clr-neutral-400);
}

.text-neutral-800 {
    color: var(--clr-neutral-800);
}

.bg-neutral-100 {
    background-color: var(--clr-neutral-100);
}

.bg-neutral-200 {
    background-color: var(--clr-neutral-200);
}

.text-align-left {
    text-align: start;
}

.text-align-center {
    text-align: center;
}

.text-align-right {
    text-align: end;
}

.fw-bold {
    font-weight: var(--fw-700);
}

.fw-black {
    font-weight: var(--fw-900);
}

.br-1 {
    border-radius: 0.5rem;
}

.br-2 {
    border-radius: 1rem;
}

.push-right {
    margin-left: auto;
}

a,
.link {
    background: transparent;
    color: var(--clr-primary-400);
    font-weight: var(--fw-700);
    text-decoration: underline;
    border: 0;
    cursor: pointer;
}

a:hover,
a:focus,
.link:hover,
.link:focus {
    color: var(--clr-primary-300);
    text-decoration: none;
}

.lo {
    border: 1px solid red;
}

/* Block */

.card {
    overflow: hidden;
    /* for demo only */
    max-width: 450px;
}

.card__image {
    width: 100%;
}

.subscription-plan p {
    margin: 0;
}

.button {
    background: transparent;
    font-weight: var(--fw-900);
    text-decoration: none;
    padding: 1em 2em;
    border: 0;
    border-radius: 0.5rem;
    cursor: pointer;
}

/* Using data attribute prevents applying two different style class to the different buttons... */
.button[data-type="primary"] {
    background: var(--clr-primary-400);
    color: var(--clr-neutral-100);
}

.button[data-type="primary"]:hover,
.button[data-type="primary"]:focus {
    background: var(--clr-primary-300);
}

.button[data-type="naked"] {
    color: var(--clr-neutral-400);
    padding: 0;
}

.button[data-type="naked"]:hover,
.button[data-type="naked"]:focus {
    color: var(--clr-neutral-800);
    font-weight: var(--fw-900);
}
